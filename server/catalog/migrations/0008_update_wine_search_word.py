# Generated by Django 3.1.7 on 2021-03-31 18:37
import django.contrib.postgres.indexes
from django.db import connection, migrations


def update_wine_search_word(apps, schema_editor):
    # we don't use the search_vector column because we want non stemmed words
    # so, we rebuild the search_vector with the 'simple' configuration
    sql = """
        insert into catalog_winesearchword (word)
        select word from ts_stat('
            select
                to_tsvector(''simple'', variety) ||
                to_tsvector(''simple'', winery) ||
                to_tsvector(''simple'', coalesce(description, ''''))
            from catalog_wine
        ');
    """
    with connection.cursor() as cursor:
        cursor.execute(sql)


def reverse_wine_search_word(apps, schema_editor):
    WineSearchWord = apps.get_model("catalog", "WineSearchWord")
    db_alias = schema_editor.connection.alias
    WineSearchWord.objects.using(db_alias).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("catalog", "0007_winesearchword"),
    ]

    operations = [
        migrations.AddIndex(
            model_name="winesearchword",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["word"],
                name="wine_search_word_trigram_index",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.RunPython(
            update_wine_search_word, reverse_wine_search_word, elidable=True
        ),
    ]
